
subproject libs/wine/test ;

import testing ;

DEPENDS all : test ;

rule wine-test ( name )
{
    return [
        run $(name).cpp
        : : :
        <include>$(BOOST_ROOT)
        <include>$(PSTADE_ROOT)
    ] ;
}

test-suite wine :
    [ wine-test adl_barrier ]
    [ wine-test affect ]
    [ wine-test arg ]
    [ wine-test arraya ]
    [ wine-test assignable ]
    [ wine-test base_to_derived ]
    [ wine-test check ]
    [ wine-test const ]
    [ wine-test contract ]
    [ wine-test for_debug ]
    [ wine-test has_xxx ]
    [ wine-test header ]
    [ wine-test instance ]
    [ wine-test integral_cast ]
    [ wine-test is_ndebug ]
    [ wine-test is_same ]
    [ wine-test lexical_cast ]
    [ wine-test locale_saver ]
    [ wine-test metapredicate ]
    [ wine-test new ]
    [ wine-test nullptr ]
    [ wine-test overload ]
    [ wine-test pause ]
    [ wine-test remove_cvr ]
    [ wine-test require ]
    [ wine-test statement ]
    [ wine-test static_c ]
    [ wine-test unparenthesize ]
    [ wine-test unused ]
    [ wine-test verify ]
    ;
