# (C) Copyright 2007: Shunsuke Sogame
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

import testing ;

project
    : requirements
      <library>/boost/test//boost_test_exec_monitor/<link>static
      <library>/boost/test//boost_unit_test_framework/<link>static
    ;

test-suite "wine" :
    [ run adl_barrier.cpp ]
    [ run affect.cpp ]
    [ run any.cpp ]
    [ run arraya.cpp ]
    [ run check.cpp ]
    [ run clone_ptr.cpp ]
    [ run concept_off.cpp ]
    [ run concept_on.cpp ]
    [ run const_overloaded.cpp ]
    [ run constant.cpp ]
    [ compile-fail constant_fail.cpp ]
    [ link constant_m1.cpp constant_m2.cpp : : constant_m ]
    [ run contract.cpp ]
    [ run deduced_const.cpp ]
    [ run detail_overload.cpp ]
    [ run disable_if_copy.cpp ]
    [ run dont_care.cpp ]
    [ run enable_if.cpp ]
    [ run for_debug.cpp ]
    [ run has_xxx.cpp ]
    [ run instance.cpp ]
    [ compile-fail instance_const_fail.cpp ]
    [ link instance_m1.cpp instance_m2.cpp : : instance_m ]
    [ run is_ndebug.cpp ]
    [ run is_returnable.cpp ]
    [ run locale_saver.cpp ]
    [ run make_bool.cpp ]
    [ run metapredicate.cpp ]
    [ run nullptr.cpp ]
    [ run pause.cpp ]
    [ link pod_constant1.cpp pod_constant2.cpp : : pod_constant ]
    [ run preprocessor.cpp ]
    [ run remove_cvr.cpp ]
    [ run require.cpp ]
    [ run result_of.cpp ]
    [ run result_of_lambda.cpp ]
    [ run singleton.cpp ]
    [ run statement.cpp ]
    [ link statement_m1.cpp statement_m2.cpp : : statement_m ]
    [ run static_c.cpp ]
    [ run template_arguments.cpp ]
    [ run test_test.cpp ]
    [ run unevaluated.cpp ]
    [ run unparenthesize.cpp ]
    [ run unused.cpp ]
    [ run use_default.cpp ]
    [ run verify.cpp ]
    [ run what.cpp ]
    [ link multiple_defs1.cpp multiple_defs2.cpp : : multiple_defs ]
    ;

