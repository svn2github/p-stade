# (C) Copyright 2007: Shunsuke Sogame
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

import testing ;

project
    : requirements
      <library>/boost/test//boost_unit_test_framework/<link>static
    ;

test-suite "wine" :
    [ run adl_barrier.cpp ]
    [ run affect.cpp ]
    [ run any_movable.cpp ]
    [ run arraya.cpp ]
    [ run as.cpp ]
    [ run as_mpl_lambda.cpp ]
    [ run at.cpp ]
    [ run automatic.cpp ]
    [ run auxiliary.cpp ]
    [ run base_to_derived.cpp ]
    [ run callable.cpp ]
    [ run cast_function.cpp ]
    [ run check.cpp ]
    [ run clone_ptr.cpp ]
    [ run compose.cpp ]
    [ run concept_off.cpp ]
    [ run concept_on.cpp ]
    [ run constant.cpp ]
    [ run const_overloaded.cpp ]
    [ run construct.cpp ]
    [ run contract.cpp ]
    [ run copy_assign.cpp ]
    [ run deduced_const.cpp ]
    [ run disable_if_copy.cpp ]
    [ run do_swap.cpp ]
    [ run dont_care.cpp ]
    [ run enable_if.cpp ]
    [ run for_debug.cpp ]
    [ run function.cpp ]
    [ run functional.cpp ]
    [ run fuse.cpp ]
    [ run has_xxx.cpp ]
    [ run header.cpp ]
    [ run instance.cpp ]
    [ run integral_cast.cpp ]
    [ run is_ndebug.cpp ]
    [ run is_returnable.cpp ]
    [ run is_same.cpp ]
    [ run lambda_bind.cpp ]
    [ run lexical_cast.cpp ]
    [ run locale.cpp ]
    [ run locale_saver.cpp ]
    [ run metapredicate.cpp ]
    [ run new_delete.cpp ]
    [ run nullptr.cpp ]
    [ run object_generator.cpp ]
    [ run overload.cpp ]
    [ run pack.cpp ]
    [ run pause.cpp ]
    [ run perfect.cpp ]
    [ run pipable.cpp ]
    [ run preprocessor.cpp ]
    [ run provide_result_of_sig.cpp ]
    [ run provide_sig.cpp ]
    [ run remove_cvr.cpp ]
    [ run require.cpp ]
    [ run result_of_lambda.cpp ]
    [ run statement.cpp ]
    [ run static_c.cpp ]
    [ run template_arguments.cpp ]
    [ run to_shared_ptr.cpp ]
    [ run unfuse.cpp ]
    [ run unparenthesize.cpp ]
    [ run unused.cpp ]
    [ run use_default.cpp ]
    [ run verify.cpp ]
    [ run what.cpp ]
    ;

