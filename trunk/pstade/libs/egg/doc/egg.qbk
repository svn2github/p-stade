
[library Egg
    [quickbook 1.3]
    [version 0.90.3]
    [authors [Sogame, Shunsuke]]
    [copyright 2007 Shunsuke Sogame]
    [category functional]
    [id egg]
    [dirname egg]
    [purpose functional programming utilities]
    [source-mode c++]
    [license
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
[@http://www.boost.org/LICENSE_1_0.txt])
    ]
]




[/ External Links ]

[def __BOOST__ [@http://www.boost.org Boost C++ Libraries]]
[def __BOOST_ENABLE_IF__ [@http://www.boost.org/libs/utility/enable_if.html Boost.EnableIf]]
[def __BOOST_LAMBDA__ [@http://www.boost.org/libs/lambda/ Boost.Lambda]]
[def __BOOST_PHOENIX__ [@http://www.boost.org/libs/spirit/phoenix/index.html Boost.Phoenix]]
[def __BOOST_PREPROCESSOR__ [@http://www.boost.org/libs/preprocessor/doc/index.html Boost.Preprocessor]]
[def __BOOST_RESULT_OF__ [@http://www.boost.org/libs/utility/utility.htm#result_of Boost.ResultOf]]
[def __BOOST_TUPLE__ [@http://www.boost.org/libs/tuple/index.html Boost.Tuple]]
[def __PSTADE_RELEASE__ [@http://sourceforge.net/project/showfiles.php?group_id=141222&package_id=173059 P-Stade C++ Libraries]]
[def __FCPP__ [@http://www.cc.gatech.edu/~yannis/fc++/ FC++]]

[def __ASSIGNABLE__            [@http://boost.org/doc/html/Assignable.html Assignable]]
[def __COPY_CONSTRUCTIBLE__    [@http://boost.org/doc/html/CopyConstructible.html Copy Constructible]]
[def __EQUALITY_COMPARABLE__   [@http://boost.org/doc/html/EqualityComparable.html Equality Comparable]]
[def __DEFAULT_CONSTRUCTIBLE__ [@http://boost.org/doc/html/DefaultConstructible.html Default Constructible]]
[def __DEFERRED_CALLABLE_OBJECT__ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/concepts/def_callable.html Deferred Callable Object]]
[def __DEFERRED_CALLABLE__ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/concepts/def_callable.html Deferred Callable]]
[def __FUNCTION_OBJECT__ [@http://www.sgi.com/tech/stl/functors.html Function Object]]
[def __METAFUNCTION__ [@http://www.boost.org/libs/mpl/doc/refmanual/metafunction.html Metafunction]]
[def __MPL_LAMBDA_EXPRESSION__ [@http://www.boost.org/libs/mpl/doc/refmanual/lambda-expression.html MPL Lambda Expression]]
[def __MPL_FORWARD_SEQUENCE__ [@http://www.boost.org/libs/mpl/doc/refmanual/forward-sequence.html MPL Forward Sequence]]
[def __SGI_ADAPTABLE__ [@http://www.sgi.com/tech/stl/AdaptableUnaryFunction.html Adaptable]]

[def __BOOST_INDIRECT_ITERATOR__ [@http://www.boost.org/libs/iterator/doc/indirect_iterator.html boost::indirect_iterator]]
[def __BOOST_FUSION_FUNCTIONAL__ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/adapters.html Fusion Functional Adapters]]

[def __FORWARDING_PROBLEM__ [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1385.htm The Forwarding Problem]]
[def __DAVID_CALLABLE__ [@http://article.gmane.org/gmane.comp.parsers.spirit.devel/2826  callable]]

[def __VARIADIC_TEMPLATES__ [@http://www.generic-programming.org/~dgregor/cpp/variadic-templates.html Variadic Templates]]




[/ Internal Links ]

[def __CONSTANT_OBJECT__ [link egg.concepts.constant_object Constant Object]]
[def __LEXICALLY_TYPED_OBJECT__ [link egg.concepts.lexically_typed_object Lexically Typed Object]]
[def __STATIC_FUNCTION_OBJECT__ [link egg.concepts.static_function_object Static Function Object]]
[def __OPERATABLE__ [link egg.concepts.operatable_object Operatable]]
[def __AUXILIARY_CLASS_INTERFACE__ [link egg.concepts.auxiliary_class_interface Auxiliary Class Interface]]
[def __BINDABLE_OBJECT__ [link egg.concepts.bindable_object Bindable Object]]
[def __BINDABLE__ [link egg.concepts.bindable_object Bindable]]
[def __PIPABLE_OBJECT__ [link egg.concepts.pipable_object Pipable Object]]
[def __PIPABLE__ [link egg.concepts.pipable_object Pipable]]
[def __BABY_FUNCTION__ [link egg.concepts.baby_function Baby Function]]

[def __EGG_FORWARDING_STRATEGIES__ [link egg.forwarding_strategies Forwarding Strageties]]
[def __EGG_DEDUCING_NULLARY_RETURN_TYPES__ [link egg.forwarding_strategies.deducing_nullary_return_types Deducing nullary return types]]
[def __EGG_HOW_TO_GENERATE__ [link egg.object_generator.how_to_generate How to generate]]

[def __EGG_FUNCTION_MAKERS__ [link egg.function_makers Function Makers]]
[def __EGG_FUNCTION_ADAPTORS__ [link egg.function_adaptors Function Adaptors]]
[def __EGG_FUNCTION__ [link egg.function_makers.function function]]
[def __EGG_FUNCTION_FACADE__ [link egg.function_makers.function_facade function_facade]]
[def __EGG_DEFERRED__ [link egg.function_makers.deferred deferred]]
[def __EGG_MAKE_FUNCTION__ [link egg.function_makers.make_function make_function]]

[def __EGG_AUXILIARY__ [link egg.function_adaptors.auxiliaryn auxiliaryN]]
[def __EGG_CURRY__ [link egg.function_adaptors.curryn curryN]]
[def __EGG_UNCURRY__ [link egg.function_adaptors.uncurry uncurry]]
[def __EGG_FUSE__ [link egg.function_adaptors.fuse fuse]]
[def __EGG_UNFUSE__ [link egg.function_adaptors.unfuse unfuse]]
[def __EGG_LAZY__ [link egg.function_adaptors.lazy lazy]]
[def __EGG_PIPABLE__ [link egg.function_adaptors.pipable pipable]]
[def __EGG_RET__ [link egg.function_adaptors.ret ret]]
[def __EGG_LAMBDA_BIND__ [link egg.utilities.lambda_bind lambda_bind]]

[def __EGG_GENERATOR__ [link egg.object_generator.generator generator]]

[def __PSTADE_RESULT_OF__ [link egg.workarounds.pstade__result_of pstade::result_of]]
[def __EGG_DEFER__ [link egg.workarounds.defer PSTADE_EGG_DEFER]]
[def __EGG_DEDUCED_FORM__ [link egg.workarounds.deduced_form deduced_form]]




[include preface.qbk]
[include concepts.qbk]
[include forwarding_strategies.qbk]
[include function_makers.qbk]
[include function_adaptors.qbk]
[include object_generator.qbk]
[include utilities.qbk]
[include configuration.qbk]
[include workarounds.qbk]
[include version_history.qbk]


