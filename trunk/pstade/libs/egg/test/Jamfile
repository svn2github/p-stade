
subproject libs/egg/test ;

import testing ;


if $(VC80_ROOT)
{
	ProgramFiles ?= $(PROGRAMFILES) ;
	VC_SDK_ROOT ?= $(ProgramFiles:J=" ")"\\Microsoft Platform SDK\\" ;
	VC_SDK_HEADER = $(VC_SDK_ROOT)/include ;
	VC_ATL_HEADER = $(VC_SDK_ROOT)/include/atl ;
	VC_MFC_HEADER = $(VC_SDK_ROOT)/include/mfc ;
	VC_SDK_LIB = $(VC_SDK_ROOT)/lib ;
}


if $(VC71_ROOT)
{
	VC_ATL_HEADER = $(VC71_ROOT)/atlmfc/include ;
	VC_MFC_HEADER = $(VC_ATL_HEADER) ;
}


DEPENDS all : test ;

rule egg-test ( name : includes * )
{
    return [
        run $(name).cpp
        : : :
        <define>BOOST_ALL_NO_LIB
        <include>$(PSTADE_ROOT)        
        <include>$(BOOST_ROOT)
        <include>$(MINGW_INCLUDE_DIRECTORY)
        <include>$(VC_SDK_HEADER)   
        <include>$(VC_ATL_HEADER)
        <include>$(VC_MFC_HEADER)
        <include>$(WTL_ROOT)
        # <lib>$(VC_SDK_LIB)
        $(includes)
    ] ;
}

test-suite egg :
    [ egg-test doc ]
    [ egg-test function ]
    [ egg-test lambda ]
    [ egg-test pipable ]
    [ egg-test unused_to_copy ]
    ;
