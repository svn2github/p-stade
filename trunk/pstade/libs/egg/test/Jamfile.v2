# (C) Copyright 2007: Shunsuke Sogame
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

import testing ;

project
    : requirements
      <library>/boost/test//boost_test_exec_monitor/<link>static
      <library>/boost/test//boost_unit_test_framework/<link>static
    ;

test-suite "egg" :
    [ run after.cpp ]
    [ run always.cpp ]
    [ run as_mpl_lambda.cpp ]
    [ run auto_object.cpp ]
    [ run automatic.cpp ]
    [ run auxiliary.cpp ]
    [ run before.cpp ]
    [ run big_arity.cpp ]
    [ run by_cref.cpp ]
    [ run by_perfect.cpp ]
    [ run by_ref.cpp ]
    [ run by_value.cpp ]
    [ run compose1.cpp ]
    [ run compose2.cpp ]
    [ run construct.cpp ]
    [ run constructor.cpp ]
    [ run copy.cpp ]
    [ run copy_assign.cpp ]
    [ run curry.cpp ]
    [ run deduced_form.cpp ]
    [ run defer_sig.cpp ]
    [ run deferred.cpp ]
    [ run delete.cpp ]
    [ run delete_array.cpp ]
    [ run dereference.cpp ]
    [ run do_swap.cpp ]
    [ run fix.cpp ]
    [ run flip.cpp ]
    [ run function.cpp ]
    [ run function_facade.cpp ]
    [ run function_facade_by.cpp ]
    [ run functional.cpp ]
    [ run fuse.cpp ]
    [ run generator.cpp ]
    [ run identity.cpp ]
    [ run iequal_to.cpp ]
    [ run incomplete_baby.cpp ]
    [ run indirect.cpp ]
    [ run infix.cpp ]
    [ run integral_cast.cpp ]
    [ run integralize.cpp ]
    [ run is_classified_as.cpp ]
    [ run is_same.cpp ]
    [ run lambda.cpp ]
    [ run lambda_result_of.cpp ]
    [ run lazy.cpp ]
    [ run lexical_cast.cpp ]
    [ run lexicalize.cpp ]
    [ run make_function.cpp ]
    [ run make_function_of.cpp ]
    [ run memoize.cpp ]
    [ run monad.cpp ]
    [ run mono.cpp ]
    [ run new.cpp ]
    [ run new_array.cpp ]
    [ run new_auto.cpp ]
    [ run new_ptr.cpp ]
    [ run new_shared.cpp ]
    [ run new_shared_array.cpp ]
    [ run not.cpp ]
    [ run parallel.cpp : : : <library>/boost/thread//boost_thread/<link>static <threading>multi ]
    [ run parallel.cpp : : : <define>PSTADE_EGG_DISABLE_THREADS : parallel_no_threads ]
    [ run perfect.cpp ]
    [ run pipable.cpp ]
    [ run ret.cpp ]
    [ run shared_object.cpp ]
    [ run sig_template.cpp ]
    [ run specified.cpp ]
    [ run static_downcast.cpp ]
    [ run-fail static_downcast_fail.cpp ]
    [ run strong_assign.cpp ]
    [ run to_lower.cpp ]
    [ run to_ref.cpp ]
    [ run to_shared_ptr.cpp ]
    [ run to_string.cpp ]
    [ run to_upper.cpp ]
    [ run to_value.cpp ]
    [ run tuple_element.cpp ]
    [ run tuple_get.cpp ]
    [ run tuple_pack.cpp ]
    [ run tuple_size.cpp ]
    [ run uncurry.cpp ]
    [ run unfuse.cpp ]
    [ run use_xxx.cpp ]
    [ run volatile_correct.cpp ]
    [ link multiple_defs1.cpp multiple_defs2.cpp : : multiple_defs ]
    ;

