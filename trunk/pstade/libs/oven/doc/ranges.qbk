[section Ranges]

[section any_range]

[h3 Description]
Though Oven supports `boost::result_of`, it is often cumbersome to get the type of the adapted range.
`any_range` behaves as the type erasure of ranges.

[h3 Header]
* `<pstade/oven/any_range.hpp>`

[h3 Model of]
* _range_ whose traversal category varies according to the template argument.
* _assignable_
* _default_constructible_

[h3 Valid expressions]
[table 
    [
        [[*Valid expression]]
        [[*Semantics]]
    ]
    [
        [`any_range<Ref, Trv> any(rng);`]
        [
            defines a _range_ whose iterators behave as if they were original iterators wrapped in
            [@http://thbecker.net/free_software_utilities/type_erasure_for_cpp_iterators/start_page.html any_iterator].
        ]
    ]
    [
        [`any_range<Ref, Trv> any = rngV;`]
        [`any_range<Ref, Trv> any(rngV);`]
    ]
    [
        [`any_range<Ref, Trv> any; any = rng;`]
        [`any_range<Ref, Trv> any(rng);`]
    ]
]

[h3 Preconditions]
Assume the type of `rng` or `rngV` is `Rng`.

* `boost::range_reference<Rng>::type` is convertible to `Ref` without binding reference to rvalue.
* `Trv` is convertible to `boost::single_pass_traversal_tag`.
* `boost::range_traversal<Rng>::type` is convertible to `Trv`.
* `rngV` is a _range_ which _function_object_ of Oven returns, or a template specialization of `boost::iterator_range`.

[endsect]


[section array_range]

[h3 Description]
`array_range` is a non-Copyable _random_access_range_ which delivers
a range presentation of dynamically allocated arrays.

[h3 Header]
* `<pstade/oven/array_range.hpp>`

[h3 Model of]
* _random_access_range_
* _contiguous_range_

[h3 Valid expressions]
[table 
    [
        [[*Valid expression]]
        [[*Semantics]]
    ]
    [
        [`array_range<T> r(sz);`]
        [ ]
    ]
]

[h3 Preconditions]
* `new T[sz]` is a valid expression.

[endsect]


[section directory_range]

[h3 Description]
`directory_range` is a _single_pass_range_ which accesses the contents of a directory.

[h3 Header]
* `<pstade/oven/directory_range.hpp>`

[h3 Model of]
* _single_pass_range_

[h3 Valid expressions]
[table 
    [
        [[*Valid expression]]
        [[*Semantics]]
    ]
    [
        [`directory_range r(p);`]
        [
            defines a _range_ whose iterators behave as if they were original iterators wrapped in
            [@http://www.boost.org/libs/filesystem/doc/operations.htm#directory_iterator directory_iterator].
        ]
    ]
]

[h3 Preconditions]
* `boost::filesystem::directory_iterator it(p);` is a valid expression.

[endsect]


[endsect]
