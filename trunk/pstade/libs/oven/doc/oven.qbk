
[library Oven
    [version 0.94.0]
    [authors [Sogame, Shunsuke]]
    [copyright 2005-2007 Shunsuke Sogame]
    [category generic]
    [purpose range library proposal implementation]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        <ulink url="http://www.boost.org/LICENSE_1_0.txt">
            http://www.boost.org/LICENSE_1_0.txt
        </ulink>)
    ]
]

[/ Images ]

[/ Links ]

[def _proposal_              [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1871.html Range Library Proposal]]
[def _boost_                 [@http://www.boost.org Boost C++ Libraries]]
[def _boost_array_           [@http://www.boost.org/doc/html/array.html Boost.Array]]
[def _boost_assign_          [@http://www.boost.org/libs/assign/doc/index.html Boost.Assign]]
[def _boost_filesystem_      [@http://www.boost.org/libs/filesystem/index.html Boost.Filesystem]]
[def _boost_fusion_          [@http://boost-consulting.com/boost/libs/fusion/doc/html/index.html Boost.Fusion]]
[def _boost_iterator_        [@http://boost.org/libs/iterator/doc/index.html Boost.Iterator]]
[def _boost_lambda_          [@http://boost.org/libs/lambda/doc/index.html Boost.Lambda]]
[def _boost_optional_        [@http://boost.org/libs/optional/doc/optional.html Boost.Optional]]
[def _boost_preprocessor_    [@http://www.boost.org/libs/preprocessor/doc/index.html Boost.Preprocessor]]
[def _boost_range_           [@http://www.boost.org/libs/range/index.html Boost.Range]]
[def _boost_regex_           [@http://boost.org/libs/regex/doc/index.html Boost.Regex]]
[def _boost_result_of_       [@http://www.boost.org/libs/utility/utility.htm#result_of Boost.ResultOf]]
[def _boost_typeof_          [@http://boost.org/libs/typeof/doc/index.html Boost.Typeof]]
[def _pstade_release_        [@http://sourceforge.net/project/showfiles.php?group_id=141222&package_id=173059 P-Stade C++ Libraries]]
[def _string_algo_proposal_  [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2059.html Proposal for new string algorithms in TR2]]

[/ Concepts ]

[def _assignable_            [@http://boost.org/doc/html/Assignable.html Assignable]]
[def _copy_constructible_    [@http://boost.org/doc/html/CopyConstructible.html Copy Constructible]]
[def _default_constructible_ [@http://boost.org/doc/html/DefaultConstructible.html Default Constructible]]
[def _function_object_       [@http://www.sgi.com/tech/stl/functors.html Function Object]]
[def _generator_             [@http://www.sgi.com/tech/stl/Generator.html Generator]]
[def _equality_comparable_   [@http://boost.org/doc/html/EqualityComparable.html Equality Comparable]]

[def _predicate_             [@http://www.sgi.com/tech/stl/Predicate.html Predicate]]
[def _input_iterator_        [@http://boost.org/doc/html/InputIterator.html Input Iterator]]
[def _output_iterator_       [@http://boost.org/doc/html/OutputIterator.html Output Iterator]]
[def _forward_iterator_      [@http://boost.org/doc/html/ForwardIterator.html Forward Iterator]]

[def _sequence_              [@http://www.sgi.com/tech/stl/Sequence.html Sequence]]

[def _single_pass_           [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#single-pass-iterators-lib-single-pass-iterators Single Pass]]
[def _forward_               [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#forward-traversal-iterators-lib-forward-traversal-iterators Forward]]
[def _bidirectional_         [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#bidirectional-traversal-iterators-lib-bidirectional-traversal-iterators Bidirectional]]
[def _random_access_         [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#random-access-traversal-iterators-lib-random-access-traversal-iterators Random Access]]
[def _readable_              [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#readable-iterators-lib-readable-iterators Readable]]
[def _writable_              [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#writable-iterators-lib-writable-iterators Writable]]
[def _swappable_             [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#swappable-iterators-lib-swappable-iterators Swappable]]
[def _lvalue_                [@http://www.boost.org/libs/iterator/doc/new-iter-concepts.html#lvalue-iterators-lib-lvalue-iterators Lvalue]]
[def _constant_              [link oven.constant_range Constant]]
[def _contiguous_            [link oven.contiguous_range Contiguous]]

[def _range_                 [@http://www.boost.org/libs/range/doc/range.html Range]]

[def _input_streamable_      [@http://www.boost.org/libs/conversion/lexical_cast.htm Input Streamable]]
[def _output_streamable_     [@http://www.boost.org/libs/conversion/lexical_cast.htm Output Streamable]]
[def _incrementable_         [@http://www.boost.org/libs/iterator/doc/counting_iterator.html Incrementable]]
[def _deferred_callable_object_ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/concepts/def_callable.html Deferred Callable Object]]

[def _bindable_object_       [link oven.bindable_object Bindable Object]]
[def _bindable_              [link oven.bindable_object Bindable]]
[def _operatable_object_     [link oven.operatable_object Operatable Object]]
[def _operatable_            [link oven.operatable_object Operatable]]
[def _pipable_object_        [link oven.pipable_object Pipable Object]]
[def _pipable_               [link oven.pipable_object Pipable]]
[def _auxiliary_interface_   [link oven.auxiliary_interface Auxiliary Interface]]
[def _stoppable_generator_   [link oven.stoppable_generator Stoppable Generator]]


[include preface.qbk]
[include concepts.qbk]
[include range_algorithms.qbk]
[include ranges.qbk]
[include range_makers.qbk]
[include range_adaptors.qbk]
[include string_adaptors.qbk]
[include merge_adaptors.qbk]
[include utilities.qbk]
[include output_iterator_adaptors.qbk]
[include extending_boost_range.qbk]
[include version_history.qbk]


