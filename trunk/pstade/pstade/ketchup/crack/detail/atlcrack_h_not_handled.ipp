///////////////////////////////////////////////////////////////////////////////
// GENERATED BY msg_wm_converter
//

///////////////////////////////////////////////////////////////////////////////
// Standard Windows message macros

///////////////////////////////////////////////////////////////////////////////
// msg_wm_create_not_handled
//
template<
	LRESULT (Derived::*func)(LPCREATESTRUCT)
>
struct msg_wm_create_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CREATE)
		{
			
			lResult = (LRESULT)(derived.*func)((LPCREATESTRUCT)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_initdialog_not_handled
//
template<
	LRESULT (Derived::*func)(HWND,LPARAM)
>
struct msg_wm_initdialog_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_INITDIALOG)
		{
			
			lResult = (LRESULT)(derived.*func)((HWND)wParam, lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_copydata_not_handled
//
template<
	LRESULT (Derived::*func)(HWND,PCOPYDATASTRUCT)
>
struct msg_wm_copydata_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COPYDATA)
		{
			
			lResult = (LRESULT)(derived.*func)((HWND)wParam, (PCOPYDATASTRUCT)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_destroy_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_destroy_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DESTROY)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_move_not_handled
//
template<
	void (Derived::*func)(KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_move_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOVE)
		{
			
			(derived.*func)(CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_size_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CSize const&)
>
struct msg_wm_size_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SIZE)
		{
			
			(derived.*func)((UINT)wParam, CSize(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_activate_not_handled
//
template<
	void (Derived::*func)(UINT,BOOL,HWND)
>
struct msg_wm_activate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ACTIVATE)
		{
			
			(derived.*func)((UINT)LOWORD(wParam), (BOOL)HIWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setfocus_not_handled
//
template<
	void (Derived::*func)(HWND)
>
struct msg_wm_setfocus_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETFOCUS)
		{
			
			(derived.*func)((HWND)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_killfocus_not_handled
//
template<
	void (Derived::*func)(HWND)
>
struct msg_wm_killfocus_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_KILLFOCUS)
		{
			
			(derived.*func)((HWND)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_enable_not_handled
//
template<
	void (Derived::*func)(BOOL)
>
struct msg_wm_enable_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ENABLE)
		{
			
			(derived.*func)((BOOL)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paint_not_handled
//
template<
	void (Derived::*func)(HDC)
>
struct msg_wm_paint_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PAINT)
		{
			
			(derived.*func)((HDC)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_close_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_close_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CLOSE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_queryendsession_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,UINT)
>
struct msg_wm_queryendsession_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_QUERYENDSESSION)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)wParam, (UINT)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_queryopen_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_queryopen_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_QUERYOPEN)
		{
			
			lResult = (LRESULT)(derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_erasebkgnd_not_handled
//
template<
	LRESULT (Derived::*func)(HDC)
>
struct msg_wm_erasebkgnd_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ERASEBKGND)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syscolorchange_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_syscolorchange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SYSCOLORCHANGE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_endsession_not_handled
//
template<
	void (Derived::*func)(BOOL,UINT)
>
struct msg_wm_endsession_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ENDSESSION)
		{
			
			(derived.*func)((BOOL)wParam, (UINT)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_showwindow_not_handled
//
template<
	void (Derived::*func)(BOOL,int)
>
struct msg_wm_showwindow_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SHOWWINDOW)
		{
			
			(derived.*func)((BOOL)wParam, (int)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcoloredit_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcoloredit_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CTLCOLOREDIT)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorlistbox_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorlistbox_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CTLCOLORLISTBOX)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorbtn_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorbtn_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CTLCOLORBTN)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolordlg_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolordlg_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CTLCOLORDLG)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorscrollbar_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorscrollbar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CTLCOLORSCROLLBAR)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorstatic_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorstatic_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CTLCOLORSTATIC)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_settingchange_not_handled
//
template<
	void (Derived::*func)(UINT,LPCTSTR)
>
struct msg_wm_settingchange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETTINGCHANGE)
		{
			
			(derived.*func)((UINT)wParam, (LPCTSTR)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_devmodechange_not_handled
//
template<
	void (Derived::*func)(LPCTSTR)
>
struct msg_wm_devmodechange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DEVMODECHANGE)
		{
			
			(derived.*func)((LPCTSTR)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_activateapp_not_handled
//
template<
	void (Derived::*func)(BOOL,DWORD)
>
struct msg_wm_activateapp_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ACTIVATEAPP)
		{
			
			(derived.*func)((BOOL)wParam, (DWORD)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_fontchange_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_fontchange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_FONTCHANGE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_timechange_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_timechange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_TIMECHANGE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_cancelmode_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_cancelmode_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CANCELMODE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setcursor_not_handled
//
template<
	LRESULT (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_setcursor_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETCURSOR)
		{
			
			lResult = (LRESULT)(derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mouseactivate_not_handled
//
template<
	LRESULT (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_mouseactivate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOUSEACTIVATE)
		{
			
			lResult = (LRESULT)(derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_childactivate_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_childactivate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CHILDACTIVATE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_getminmaxinfo_not_handled
//
template<
	void (Derived::*func)(LPMINMAXINFO)
>
struct msg_wm_getminmaxinfo_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETMINMAXINFO)
		{
			
			(derived.*func)((LPMINMAXINFO)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_iconerasebkgnd_not_handled
//
template<
	void (Derived::*func)(HDC)
>
struct msg_wm_iconerasebkgnd_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ICONERASEBKGND)
		{
			
			(derived.*func)((HDC)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_spoolerstatus_not_handled
//
template<
	void (Derived::*func)(UINT,UINT)
>
struct msg_wm_spoolerstatus_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SPOOLERSTATUS)
		{
			
			(derived.*func)((UINT)wParam, (UINT)LOWORD(lParam));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_drawitem_not_handled
//
template<
	void (Derived::*func)(UINT,LPDRAWITEMSTRUCT)
>
struct msg_wm_drawitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DRAWITEM)
		{
			
			(derived.*func)((UINT)wParam, (LPDRAWITEMSTRUCT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_measureitem_not_handled
//
template<
	void (Derived::*func)(UINT,LPMEASUREITEMSTRUCT)
>
struct msg_wm_measureitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MEASUREITEM)
		{
			
			(derived.*func)((UINT)wParam, (LPMEASUREITEMSTRUCT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_deleteitem_not_handled
//
template<
	void (Derived::*func)(UINT,LPDELETEITEMSTRUCT)
>
struct msg_wm_deleteitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DELETEITEM)
		{
			
			(derived.*func)((UINT)wParam, (LPDELETEITEMSTRUCT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_chartoitem_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_wm_chartoitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CHARTOITEM)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_vkeytoitem_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_wm_vkeytoitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_VKEYTOITEM)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_querydragicon_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_querydragicon_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_QUERYDRAGICON)
		{
			
			lResult = (LRESULT)(derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_compareitem_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,LPCOMPAREITEMSTRUCT)
>
struct msg_wm_compareitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COMPAREITEM)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)wParam, (LPCOMPAREITEMSTRUCT)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_compacting_not_handled
//
template<
	void (Derived::*func)(UINT)
>
struct msg_wm_compacting_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COMPACTING)
		{
			
			(derived.*func)((UINT)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nccreate_not_handled
//
template<
	LRESULT (Derived::*func)(LPCREATESTRUCT)
>
struct msg_wm_nccreate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCCREATE)
		{
			
			lResult = (LRESULT)(derived.*func)((LPCREATESTRUCT)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncdestroy_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_ncdestroy_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCDESTROY)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nccalcsize_not_handled
//
template<
	LRESULT (Derived::*func)(BOOL,LPARAM)
>
struct msg_wm_nccalcsize_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCCALCSIZE)
		{
			
			lResult = (derived.*func)((BOOL)wParam, lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nchittest_not_handled
//
template<
	LRESULT (Derived::*func)(KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_nchittest_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCHITTEST)
		{
			
			lResult = (LRESULT)(derived.*func)(CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncpaint_not_handled
//
template<
	void (Derived::*func)(HRGN)
>
struct msg_wm_ncpaint_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCPAINT)
		{
			
			(derived.*func)((HRGN)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncactivate_not_handled
//
template<
	LRESULT (Derived::*func)(BOOL)
>
struct msg_wm_ncactivate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCACTIVATE)
		{
			
			lResult = (LRESULT)(derived.*func)((BOOL)wParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_getdlgcode_not_handled
//
template<
	LRESULT (Derived::*func)(LPMSG)
>
struct msg_wm_getdlgcode_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETDLGCODE)
		{
			
			lResult = (LRESULT)(derived.*func)((LPMSG)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmousemove_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncmousemove_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCMOUSEMOVE)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nclbuttondown_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_nclbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCLBUTTONDOWN)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nclbuttonup_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_nclbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCLBUTTONUP)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nclbuttondblclk_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_nclbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCLBUTTONDBLCLK)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncrbuttondown_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncrbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCRBUTTONDOWN)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncrbuttonup_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncrbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCRBUTTONUP)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncrbuttondblclk_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncrbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCRBUTTONDBLCLK)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmbuttondown_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncmbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCMBUTTONDOWN)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmbuttonup_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncmbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCMBUTTONUP)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmbuttondblclk_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncmbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCMBUTTONDBLCLK)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_keydown_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_keydown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_KEYDOWN)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_keyup_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_keyup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_KEYUP)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_char_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_char_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CHAR)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_deadchar_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_deadchar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DEADCHAR)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syskeydown_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_syskeydown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SYSKEYDOWN)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syskeyup_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_syskeyup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SYSKEYUP)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syschar_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_syschar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SYSCHAR)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sysdeadchar_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_sysdeadchar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SYSDEADCHAR)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syscommand_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_syscommand_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SYSCOMMAND)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_tcard_not_handled
//
template<
	void (Derived::*func)(UINT,DWORD)
>
struct msg_wm_tcard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_TCARD)
		{
			
			(derived.*func)((UINT)wParam, (DWORD)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_timer_not_handled
//
template<
	void (Derived::*func)(UINT,TIMERPROC)
>
struct msg_wm_timer_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_TIMER)
		{
			
			(derived.*func)((UINT)wParam, (TIMERPROC)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_hscroll_not_handled
//
template<
	void (Derived::*func)(int,short,HWND)
>
struct msg_wm_hscroll_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_HSCROLL)
		{
			
			(derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_vscroll_not_handled
//
template<
	void (Derived::*func)(int,short,HWND)
>
struct msg_wm_vscroll_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_VSCROLL)
		{
			
			(derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_initmenu_not_handled
//
template<
	void (Derived::*func)(HMENU)
>
struct msg_wm_initmenu_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_INITMENU)
		{
			
			(derived.*func)((HMENU)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_initmenupopup_not_handled
//
template<
	void (Derived::*func)(HMENU,UINT,BOOL)
>
struct msg_wm_initmenupopup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_INITMENUPOPUP)
		{
			
			(derived.*func)((HMENU)wParam, (UINT)LOWORD(lParam), (BOOL)HIWORD(lParam));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menuselect_not_handled
//
template<
	void (Derived::*func)(UINT,UINT,HMENU)
>
struct msg_wm_menuselect_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MENUSELECT)
		{
			
			(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HMENU)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menuchar_not_handled
//
template<
	LRESULT (Derived::*func)(TCHAR,UINT,HMENU)
>
struct msg_wm_menuchar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MENUCHAR)
		{
			
			lResult = (derived.*func)((TCHAR)LOWORD(wParam), (UINT)HIWORD(wParam), (HMENU)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_notify_not_handled
//
template<
	LRESULT (Derived::*func)(int,LPNMHDR)
>
struct msg_wm_notify_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NOTIFY)
		{
			
			lResult = (derived.*func)((int)wParam, (LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_enteridle_not_handled
//
template<
	void (Derived::*func)(UINT,HWND)
>
struct msg_wm_enteridle_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ENTERIDLE)
		{
			
			(derived.*func)((UINT)wParam, (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mousemove_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_mousemove_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOUSEMOVE)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mousewheel_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,short,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_mousewheel_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOUSEWHEEL)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (short)HIWORD(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_lbuttondown_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_lbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_LBUTTONDOWN)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_lbuttonup_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_lbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_LBUTTONUP)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_lbuttondblclk_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_lbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_LBUTTONDBLCLK)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rbuttondown_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_rbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_RBUTTONDOWN)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rbuttonup_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_rbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_RBUTTONUP)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rbuttondblclk_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_rbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_RBUTTONDBLCLK)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mbuttondown_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_mbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MBUTTONDOWN)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mbuttonup_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_mbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MBUTTONUP)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mbuttondblclk_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_mbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MBUTTONDBLCLK)
		{
			
			(derived.*func)((UINT)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_parentnotify_not_handled
//
template<
	void (Derived::*func)(UINT,UINT,LPARAM)
>
struct msg_wm_parentnotify_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PARENTNOTIFY)
		{
			
			(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mdiactivate_not_handled
//
template<
	void (Derived::*func)(HWND,HWND)
>
struct msg_wm_mdiactivate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MDIACTIVATE)
		{
			
			(derived.*func)((HWND)wParam, (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_renderformat_not_handled
//
template<
	void (Derived::*func)(UINT)
>
struct msg_wm_renderformat_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_RENDERFORMAT)
		{
			
			(derived.*func)((UINT)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_renderallformats_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_renderallformats_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_RENDERALLFORMATS)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_destroyclipboard_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_destroyclipboard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DESTROYCLIPBOARD)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_drawclipboard_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_drawclipboard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DRAWCLIPBOARD)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paintclipboard_not_handled
//
template<
	void (Derived::*func)(HWND,const LPPAINTSTRUCT)
>
struct msg_wm_paintclipboard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PAINTCLIPBOARD)
		{
			
			(derived.*func)((HWND)wParam, (const LPPAINTSTRUCT)::GlobalLock((HGLOBAL)lParam));
			::GlobalUnlock((HGLOBAL)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_vscrollclipboard_not_handled
//
template<
	void (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_vscrollclipboard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_VSCROLLCLIPBOARD)
		{
			
			(derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_contextmenu_not_handled
//
template<
	void (Derived::*func)(HWND,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_contextmenu_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CONTEXTMENU)
		{
			
			(derived.*func)((HWND)wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sizeclipboard_not_handled
//
template<
	void (Derived::*func)(HWND,const LPRECT)
>
struct msg_wm_sizeclipboard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SIZECLIPBOARD)
		{
			
			(derived.*func)((HWND)wParam, (const LPRECT)::GlobalLock((HGLOBAL)lParam));
			::GlobalUnlock((HGLOBAL)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_askcbformatname_not_handled
//
template<
	void (Derived::*func)(DWORD,LPTSTR)
>
struct msg_wm_askcbformatname_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ASKCBFORMATNAME)
		{
			
			(derived.*func)((DWORD)wParam, (LPTSTR)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_changecbchain_not_handled
//
template<
	void (Derived::*func)(HWND,HWND)
>
struct msg_wm_changecbchain_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CHANGECBCHAIN)
		{
			
			(derived.*func)((HWND)wParam, (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_hscrollclipboard_not_handled
//
template<
	void (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_hscrollclipboard_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_HSCROLLCLIPBOARD)
		{
			
			(derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_querynewpalette_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_querynewpalette_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_QUERYNEWPALETTE)
		{
			
			lResult = (LRESULT)(derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_palettechanged_not_handled
//
template<
	void (Derived::*func)(HWND)
>
struct msg_wm_palettechanged_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PALETTECHANGED)
		{
			
			(derived.*func)((HWND)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paletteischanging_not_handled
//
template<
	void (Derived::*func)(HWND)
>
struct msg_wm_paletteischanging_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PALETTEISCHANGING)
		{
			
			(derived.*func)((HWND)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_dropfiles_not_handled
//
template<
	void (Derived::*func)(HDROP)
>
struct msg_wm_dropfiles_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DROPFILES)
		{
			
			(derived.*func)((HDROP)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_windowposchanging_not_handled
//
template<
	void (Derived::*func)(LPWINDOWPOS)
>
struct msg_wm_windowposchanging_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_WINDOWPOSCHANGING)
		{
			
			(derived.*func)((LPWINDOWPOS)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_windowposchanged_not_handled
//
template<
	void (Derived::*func)(LPWINDOWPOS)
>
struct msg_wm_windowposchanged_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_WINDOWPOSCHANGED)
		{
			
			(derived.*func)((LPWINDOWPOS)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_exitmenuloop_not_handled
//
template<
	void (Derived::*func)(BOOL)
>
struct msg_wm_exitmenuloop_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_EXITMENULOOP)
		{
			
			(derived.*func)((BOOL)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_entermenuloop_not_handled
//
template<
	void (Derived::*func)(BOOL)
>
struct msg_wm_entermenuloop_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ENTERMENULOOP)
		{
			
			(derived.*func)((BOOL)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_stylechanged_not_handled
//
template<
	void (Derived::*func)(UINT,LPSTYLESTRUCT)
>
struct msg_wm_stylechanged_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_STYLECHANGED)
		{
			
			(derived.*func)((UINT)wParam, (LPSTYLESTRUCT)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_stylechanging_not_handled
//
template<
	void (Derived::*func)(UINT,LPSTYLESTRUCT)
>
struct msg_wm_stylechanging_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_STYLECHANGING)
		{
			
			(derived.*func)((UINT)wParam, (LPSTYLESTRUCT)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sizing_not_handled
//
template<
	void (Derived::*func)(UINT,LPRECT)
>
struct msg_wm_sizing_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SIZING)
		{
			
			(derived.*func)((UINT)wParam, (LPRECT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_moving_not_handled
//
template<
	void (Derived::*func)(UINT,LPRECT)
>
struct msg_wm_moving_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOVING)
		{
			
			(derived.*func)((UINT)wParam, (LPRECT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_capturechanged_not_handled
//
template<
	void (Derived::*func)(HWND)
>
struct msg_wm_capturechanged_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CAPTURECHANGED)
		{
			
			(derived.*func)((HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_devicechange_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,DWORD)
>
struct msg_wm_devicechange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DEVICECHANGE)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)wParam, (DWORD)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_command_not_handled
//
template<
	void (Derived::*func)(UINT,int,HWND)
>
struct msg_wm_command_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COMMAND)
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_displaychange_not_handled
//
template<
	void (Derived::*func)(UINT,KETCHUP_wtype_ns::CSize const&)
>
struct msg_wm_displaychange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_DISPLAYCHANGE)
		{
			
			(derived.*func)((UINT)wParam, CSize(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_entersizemove_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_entersizemove_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_ENTERSIZEMOVE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_exitsizemove_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_exitsizemove_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_EXITSIZEMOVE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_getfont_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_getfont_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETFONT)
		{
			
			lResult = (LRESULT)(derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_gethotkey_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_gethotkey_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETHOTKEY)
		{
			
			lResult = (derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_geticon_not_handled
//
template<
	LRESULT (Derived::*func)(UINT)
>
struct msg_wm_geticon_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETICON)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)wParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_gettext_not_handled
//
template<
	LRESULT (Derived::*func)(int,LPTSTR)
>
struct msg_wm_gettext_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETTEXT)
		{
			
			lResult = (LRESULT)(derived.*func)((int)wParam, (LPTSTR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_gettextlength_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_gettextlength_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_GETTEXTLENGTH)
		{
			
			lResult = (LRESULT)(derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_help_not_handled
//
template<
	void (Derived::*func)(LPHELPINFO)
>
struct msg_wm_help_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_HELP)
		{
			
			(derived.*func)((LPHELPINFO)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_hotkey_not_handled
//
template<
	void (Derived::*func)(int,UINT,UINT)
>
struct msg_wm_hotkey_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_HOTKEY)
		{
			
			(derived.*func)((int)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_inputlangchange_not_handled
//
template<
	void (Derived::*func)(DWORD,HKL)
>
struct msg_wm_inputlangchange_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_INPUTLANGCHANGE)
		{
			
			(derived.*func)((DWORD)wParam, (HKL)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_inputlangchangerequest_not_handled
//
template<
	void (Derived::*func)(BOOL,HKL)
>
struct msg_wm_inputlangchangerequest_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_INPUTLANGCHANGEREQUEST)
		{
			
			(derived.*func)((BOOL)wParam, (HKL)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nextdlgctl_not_handled
//
template<
	void (Derived::*func)(BOOL,WPARAM)
>
struct msg_wm_nextdlgctl_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NEXTDLGCTL)
		{
			
			(derived.*func)((BOOL)LOWORD(lParam), wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nextmenu_not_handled
//
template<
	void (Derived::*func)(int,LPMDINEXTMENU)
>
struct msg_wm_nextmenu_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NEXTMENU)
		{
			
			(derived.*func)((int)wParam, (LPMDINEXTMENU)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_notifyformat_not_handled
//
template<
	LRESULT (Derived::*func)(HWND,int)
>
struct msg_wm_notifyformat_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NOTIFYFORMAT)
		{
			
			lResult = (LRESULT)(derived.*func)((HWND)wParam, (int)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_powerbroadcast_not_handled
//
template<
	LRESULT (Derived::*func)(DWORD,DWORD)
>
struct msg_wm_powerbroadcast_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_POWERBROADCAST)
		{
			
			lResult = (LRESULT)(derived.*func)((DWORD)wParam, (DWORD)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_print_not_handled
//
template<
	void (Derived::*func)(HDC,UINT)
>
struct msg_wm_print_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PRINT)
		{
			
			(derived.*func)((HDC)wParam, (UINT)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_printclient_not_handled
//
template<
	void (Derived::*func)(HDC,UINT)
>
struct msg_wm_printclient_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PRINTCLIENT)
		{
			
			(derived.*func)((HDC)wParam, (UINT)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rasdialevent_not_handled
//
template<
	void (Derived::*func)(RASCONNSTATE,DWORD)
>
struct msg_wm_rasdialevent_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_RASDIALEVENT)
		{
			
			(derived.*func)((RASCONNSTATE)wParam, (DWORD)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setfont_not_handled
//
template<
	void (Derived::*func)(HFONT,BOOL)
>
struct msg_wm_setfont_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETFONT)
		{
			
			(derived.*func)((HFONT)wParam, (BOOL)LOWORD(lParam));
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sethotkey_not_handled
//
template<
	LRESULT (Derived::*func)(int,UINT)
>
struct msg_wm_sethotkey_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETHOTKEY)
		{
			
			lResult = (LRESULT)(derived.*func)((int)LOBYTE(LOWORD(wParam)), (UINT)HIBYTE(LOWORD(wParam)));
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_seticon_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,HICON)
>
struct msg_wm_seticon_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETICON)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)wParam, (HICON)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setredraw_not_handled
//
template<
	void (Derived::*func)(BOOL)
>
struct msg_wm_setredraw_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETREDRAW)
		{
			
			(derived.*func)((BOOL)wParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_settext_not_handled
//
template<
	LRESULT (Derived::*func)(LPCTSTR)
>
struct msg_wm_settext_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_SETTEXT)
		{
			
			lResult = (LRESULT)(derived.*func)((LPCTSTR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_userchanged_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_userchanged_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_USERCHANGED)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// New NT4 & NT5 messages

#if(_WIN32_WINNT >= 0x0400)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mousehover_not_handled
//
template<
	void (Derived::*func)(WPARAM,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_mousehover_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOUSEHOVER)
		{
			
			(derived.*func)(wParam, CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mouseleave_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_mouseleave_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MOUSELEAVE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
	
		return false;
	}
};

#endif /* _WIN32_WINNT >= 0x0400 */

#if(WINVER >= 0x0500)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menurbuttonup_not_handled
//
template<
	void (Derived::*func)(WPARAM,HMENU)
>
struct msg_wm_menurbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MENURBUTTONUP)
		{
			
			(derived.*func)(wParam, (HMENU)lParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menudrag_not_handled
//
template<
	LRESULT (Derived::*func)(WPARAM,HMENU)
>
struct msg_wm_menudrag_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MENUDRAG)
		{
			
			lResult = (derived.*func)(wParam, (HMENU)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menugetobject_not_handled
//
template<
	LRESULT (Derived::*func)(PMENUGETOBJECTINFO)
>
struct msg_wm_menugetobject_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MENUGETOBJECT)
		{
			
			lResult = (derived.*func)((PMENUGETOBJECTINFO)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_uninitmenupopup_not_handled
//
template<
	void (Derived::*func)(UINT,HMENU)
>
struct msg_wm_uninitmenupopup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_UNINITMENUPOPUP)
		{
			
			(derived.*func)((UINT)HIWORD(lParam), (HMENU)wParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menucommand_not_handled
//
template<
	void (Derived::*func)(WPARAM,HMENU)
>
struct msg_wm_menucommand_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_MENUCOMMAND)
		{
			
			(derived.*func)(wParam, (HMENU)lParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

#endif /* WINVER >= 0x0500 */

#if(_WIN32_WINNT >= 0x0500)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_appcommand_not_handled
//
template<
	void (Derived::*func)(HWND,WORD,WORD,WORD)
>
struct msg_wm_appcommand_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_APPCOMMAND)
		{
			
			(derived.*func)((HWND)wParam, GET_APPCOMMAND_LPARAM(lParam), GET_DEVICE_LPARAM(lParam), GET_KEYSTATE_LPARAM(lParam));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncxbuttondown_not_handled
//
template<
	void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncxbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCXBUTTONDOWN)
		{
			
			(derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_NCHITTEST_WPARAM(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncxbuttonup_not_handled
//
template<
	void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncxbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCXBUTTONUP)
		{
			
			(derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_NCHITTEST_WPARAM(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncxbuttondblclk_not_handled
//
template<
	void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_ncxbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NCXBUTTONDBLCLK)
		{
			
			(derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_NCHITTEST_WPARAM(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_xbuttondown_not_handled
//
template<
	void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_xbuttondown_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_XBUTTONDOWN)
		{
			
			(derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_KEYSTATE_WPARAM(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_xbuttonup_not_handled
//
template<
	void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_xbuttonup_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_XBUTTONUP)
		{
			
			(derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_KEYSTATE_WPARAM(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_xbuttondblclk_not_handled
//
template<
	void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint const&)
>
struct msg_wm_xbuttondblclk_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_XBUTTONDBLCLK)
		{
			
			(derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_KEYSTATE_WPARAM(wParam), CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_changeuistate_not_handled
//
template<
	void (Derived::*func)(WORD,WORD)
>
struct msg_wm_changeuistate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CHANGEUISTATE)
		{
			
			(derived.*func)(LOWORD(wParam), HIWORD(wParam));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_updateuistate_not_handled
//
template<
	void (Derived::*func)(WORD,WORD)
>
struct msg_wm_updateuistate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_UPDATEUISTATE)
		{
			
			(derived.*func)(LOWORD(wParam), HIWORD(wParam));
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_queryuistate_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_wm_queryuistate_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_QUERYUISTATE)
		{
			
			lResult = (derived.*func)();
			
				
		}
	
		return false;
	}
};

#endif //(_WIN32_WINNT >= 0x0500)

#if(_WIN32_WINNT >= 0x0501)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_input_not_handled
//
template<
	void (Derived::*func)(WORD,HRAWINPUT)
>
struct msg_wm_input_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_INPUT)
		{
			
			(derived.*func)(GET_RAWINPUT_CODE_WPARAM(wParam), (HRAWINPUT)lParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_unichar_not_handled
//
template<
	void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_unichar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_UNICHAR)
		{
			
			(derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
			
			{
				lResult = (wParam == UNICODE_NOCHAR) ? TRUE : FALSE;
				
			}
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_wtssession_change_not_handled
//
template<
	void (Derived::*func)(WPARAM,PWTSSESSION_NOTIFICATION)
>
struct msg_wm_wtssession_change_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_WTSSESSION_CHANGE)
		{
			
			(derived.*func)(wParam, (PWTSSESSION_NOTIFICATION)lParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_themechanged_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_themechanged_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_THEMECHANGED)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
	
		return false;
	}
};

#endif /* _WIN32_WINNT >= 0x0501 */

///////////////////////////////////////////////////////////////////////////////
// ATL defined messages

///////////////////////////////////////////////////////////////////////////////
// msg_wm_forwardmsg_not_handled
//
template<
	LRESULT (Derived::*func)(LPMSG,DWORD)
>
struct msg_wm_forwardmsg_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_FORWARDMSG)
		{
			
			lResult = (LRESULT)(derived.*func)((LPMSG)lParam, (DWORD)wParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// Dialog specific messages

///////////////////////////////////////////////////////////////////////////////
// msg_dm_getdefid_not_handled
//
template<
	LRESULT (Derived::*func)()
>
struct msg_dm_getdefid_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == DM_GETDEFID)
		{
			
			lResult = (derived.*func)();
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_dm_setdefid_not_handled
//
template<
	void (Derived::*func)(UINT)
>
struct msg_dm_setdefid_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == DM_SETDEFID)
		{
			
			(derived.*func)((UINT)wParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_dm_reposition_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_dm_reposition_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == DM_REPOSITION)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// Reflected messages

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_command_not_handled
//
template<
	void (Derived::*func)(UINT,int,HWND)
>
struct msg_ocm_command_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_COMMAND)
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_notify_not_handled
//
template<
	LRESULT (Derived::*func)(int,LPNMHDR)
>
struct msg_ocm_notify_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_NOTIFY)
		{
			
			lResult = (derived.*func)((int)wParam, (LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_parentnotify_not_handled
//
template<
	void (Derived::*func)(UINT,UINT,LPARAM)
>
struct msg_ocm_parentnotify_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_PARENTNOTIFY)
		{
			
			(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_drawitem_not_handled
//
template<
	void (Derived::*func)(UINT,LPDRAWITEMSTRUCT)
>
struct msg_ocm_drawitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_DRAWITEM)
		{
			
			(derived.*func)((UINT)wParam, (LPDRAWITEMSTRUCT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_measureitem_not_handled
//
template<
	void (Derived::*func)(UINT,LPMEASUREITEMSTRUCT)
>
struct msg_ocm_measureitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_MEASUREITEM)
		{
			
			(derived.*func)((UINT)wParam, (LPMEASUREITEMSTRUCT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_compareitem_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,LPCOMPAREITEMSTRUCT)
>
struct msg_ocm_compareitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_COMPAREITEM)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)wParam, (LPCOMPAREITEMSTRUCT)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_deleteitem_not_handled
//
template<
	void (Derived::*func)(UINT,LPDELETEITEMSTRUCT)
>
struct msg_ocm_deleteitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_DELETEITEM)
		{
			
			(derived.*func)((UINT)wParam, (LPDELETEITEMSTRUCT)lParam);
			lResult = TRUE;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_vkeytoitem_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_ocm_vkeytoitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_VKEYTOITEM)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_chartoitem_not_handled
//
template<
	LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_ocm_chartoitem_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CHARTOITEM)
		{
			
			lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_hscroll_not_handled
//
template<
	void (Derived::*func)(int,short,HWND)
>
struct msg_ocm_hscroll_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_HSCROLL)
		{
			
			(derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_vscroll_not_handled
//
template<
	void (Derived::*func)(int,short,HWND)
>
struct msg_ocm_vscroll_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_VSCROLL)
		{
			
			(derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcoloredit_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcoloredit_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CTLCOLOREDIT)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorlistbox_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorlistbox_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CTLCOLORLISTBOX)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorbtn_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorbtn_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CTLCOLORBTN)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolordlg_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolordlg_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CTLCOLORDLG)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorscrollbar_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorscrollbar_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CTLCOLORSCROLLBAR)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorstatic_not_handled
//
template<
	LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorstatic_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_CTLCOLORSTATIC)
		{
			
			lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// Edit specific messages

///////////////////////////////////////////////////////////////////////////////
// msg_wm_clear_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_clear_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CLEAR)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_copy_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_copy_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COPY)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_cut_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_cut_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_CUT)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paste_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_paste_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_PASTE)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_undo_not_handled
//
template<
	void (Derived::*func)()
>
struct msg_wm_undo_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_UNDO)
		{
			
			(derived.*func)();
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// Generic message handlers

///////////////////////////////////////////////////////////////////////////////
// message_handler_ex_not_handled
//
template<
	UINT msg,LRESULT (Derived::*func)(UINT,WPARAM,LPARAM)
>
struct message_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == msg)
		{
			
			lResult = (derived.*func)(uMsg, wParam, lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// message_range_handler_ex_not_handled
//
template<
	UINT msgFirst,UINT msgLast,LRESULT (Derived::*func)(UINT,WPARAM,LPARAM)
>
struct message_range_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg >= msgFirst && uMsg <= msgLast)
		{
			
			lResult = (derived.*func)(uMsg, wParam, lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// Commands and notifications

///////////////////////////////////////////////////////////////////////////////
// command_handler_ex_not_handled
//
template<
	UINT id,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct command_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COMMAND && code == HIWORD(wParam) && id == LOWORD(wParam))
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// command_id_handler_ex_not_handled
//
template<
	UINT id,void (Derived::*func)(UINT,int,HWND)
>
struct command_id_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COMMAND && id == LOWORD(wParam))
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// command_code_handler_ex_not_handled
//
template<
	UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct command_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_COMMAND && code == HIWORD(wParam))
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// notify_handler_ex_not_handled
//
template<
	UINT id,UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NOTIFY && cd == ((LPNMHDR)lParam)->code && id == ((LPNMHDR)lParam)->idFrom)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// notify_id_handler_ex_not_handled
//
template<
	UINT id,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_id_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NOTIFY && id == ((LPNMHDR)lParam)->idFrom)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// notify_code_handler_ex_not_handled
//
template<
	UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == WM_NOTIFY && cd == ((LPNMHDR)lParam)->code)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// command_range_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,void (Derived::*func)(UINT,int,HWND)
>
struct command_range_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == WM_COMMAND && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// command_range_code_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct command_range_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == WM_COMMAND && code == HIWORD(wParam) && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// notify_range_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_range_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == WM_NOTIFY && ((LPNMHDR)lParam)->idFrom >= idFirst && ((LPNMHDR)lParam)->idFrom <= idLast)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// notify_range_code_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_range_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == WM_NOTIFY && cd == ((LPNMHDR)lParam)->code && ((LPNMHDR)lParam)->idFrom >= idFirst && ((LPNMHDR)lParam)->idFrom <= idLast)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_handler_ex_not_handled
//
template<
	UINT id,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_COMMAND && code == HIWORD(wParam) && id == LOWORD(wParam))
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_id_handler_ex_not_handled
//
template<
	UINT id,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_id_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_COMMAND && id == LOWORD(wParam))
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_code_handler_ex_not_handled
//
template<
	UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_COMMAND && code == HIWORD(wParam))
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_handler_ex_not_handled
//
template<
	UINT id,UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_NOTIFY && cd == ((LPNMHDR)lParam)->code && id == ((LPNMHDR)lParam)->idFrom)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_id_handler_ex_not_handled
//
template<
	UINT id,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_id_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_NOTIFY && id == ((LPNMHDR)lParam)->idFrom)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_code_handler_ex_not_handled
//
template<
	UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if (uMsg == OCM_NOTIFY && cd == ((LPNMHDR)lParam)->code)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_range_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_range_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == OCM_COMMAND && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
	
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_range_code_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_range_code_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == OCM_COMMAND && code == HIWORD(wParam) && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
		{
			
			(derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
			lResult = 0;
			
				
		}
		return false;
	}
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_range_handler_ex_not_handled
//
template<
	UINT idFirst,UINT idLast,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_range_handler_ex_not_handled
{
	static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
	{
		(derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

		if(uMsg == OCM_NOTIFY && ((LPNMHDR)lParam)->idFrom >= idFirst && ((LPNMHDR)lParam)->idFrom <= idLast)
		{
			
			lResult = (derived.*func)((LPNMHDR)lParam);
			
				
		}
		return false;
	}
};

