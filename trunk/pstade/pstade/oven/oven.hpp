#ifndef PSTADE_OVEN_OVEN_HPP
#define PSTADE_OVEN_OVEN_HPP


// PStade.Oven
//
// Copyright Shunsuke Sogame 2005-2007.
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)


#include "./adapted_to_base.hpp"
#include "./adjacent_filtered.hpp"
#include "./adjacent_transformed.hpp"
#include "./advance_from.hpp"
#include "./algorithm.hpp"
#include "./all.hpp"
#include "./always.hpp"
#include "./any_iterator.hpp"
#include "./any_range.hpp"
#include "./applied.hpp"
#include "./applier.hpp"
#include "./array_range.hpp"
#include "./as_array.hpp"
#include "./as_c_str.hpp"
#include "./as_literal.hpp"
#include "./as_range.hpp"
#include "./at.hpp"
#include "./back.hpp"
#include "./before_stable_partition.hpp"
#include "./begin_end.hpp"
// #include "./biscuit_tokenized.hpp"
#include "./broken_into.hpp"
#include "./checked.hpp"
#include "./cleared.hpp"
#include "./concatenated.hpp"
#include "./concepts.hpp"
#include "./const_refs.hpp"
#include "./constants.hpp"
#include "./copied_to.hpp"
#include "./copy_range.hpp"
#include "./counting.hpp"
#include "./cycled.hpp"
#include "./delimited.hpp"
// #include "./directory_range.hpp"
#include "./distance.hpp"
#include "./do_iter_swap.hpp"
#include "./dropped.hpp"
#include "./dropped_while.hpp"
#include "./duplicates.hpp"
#include "./elements.hpp"
#include "./empty_range.hpp"
#include "./equals.hpp"
#include "./expression.hpp"
#include "./extension.hpp"
#include "./file_range.hpp"
#include "./filtered.hpp"
#include "./front.hpp"
#include "./fuzipped.hpp"
#include "./generation.hpp"
#include "./identities.hpp"
#include "./indexing.hpp"
#include "./indirect_then.hpp"
#include "./indirected.hpp"
#include "./initial_values.hpp"
#include "./io.hpp"
#include "./is_heap.hpp"
#include "./is_sorted.hpp"
#include "./iter_range.hpp"
#include "./iteration.hpp"
#include "./iterator_base.hpp"
#include "./jointed.hpp"
#include "./lightweight_copyable.hpp"
#include "./lower_chars.hpp"
#include "./map_keys.hpp"
#include "./map_values.hpp"
// #include "./matches.hpp"
// #include "./matrix.hpp"
// #include "./mb_decoded.hpp"
// #include "./mb_encoded.hpp"
#include "./memoized.hpp"
#include "./merged.hpp"
// #include "./moved.hpp"
#include "./narrow_chars.hpp"
#include "./none.hpp"
#include "./offset.hpp"
#include "./outdirected.hpp"
#include "./outplaced.hpp"
// #include "./paralell.hpp"
#include "./partitioned.hpp"
#include "./permuted.hpp"
#include "./pointed.hpp"
#include "./popped.hpp"
#include "./ptr_container.hpp"
#include "./range_based1.hpp"
#include "./range_based2.hpp"
#include "./range_category.hpp"
#include "./range_constant_iterator.hpp"
#include "./range_difference.hpp"
#include "./range_iterator.hpp"
#include "./range_mutable_iterator.hpp"
#include "./range_pointer.hpp"
#include "./range_reference.hpp"
#include "./range_traversal.hpp"
#include "./range_value.hpp"
#include "./read.hpp"
#include "./recursion.hpp"
#include "./regular.hpp"
#include "./reverse_iterator.hpp"
#include "./reversed.hpp"
#include "./rotated.hpp"
#include "./rvalues.hpp"
#include "./scanned.hpp"
#include "./set_cap.hpp"
#include "./set_cup.hpp"
#include "./set_delta.hpp"
#include "./set_minus.hpp"
#include "./shared.hpp"
#include "./shared_single.hpp"
#include "./shared_values.hpp"
#include "./single.hpp"
#include "./sliced.hpp"
#include "./sorted.hpp"
#include "./spanned.hpp"
#include "./split_at.hpp"
#include "./steps.hpp"
#include "./stream_lines.hpp"
#include "./stream_read.hpp"
#include "./stream_writer.hpp"
#include "./string_found.hpp"
#include "./string_split.hpp"
#include "./sub_range.hpp"
#include "./sub_set.hpp"
#include "./successors.hpp"
#include "./sugar.hpp"
// #include "./tab_expanded.hpp"
// #include "./tab_unexpanded.hpp"
#include "./taken.hpp"
#include "./taken_while.hpp"
// #include "./tokenized.hpp"
#include "./transformed.hpp"
#include "./traversal_tags.hpp"
#include "./tuple.hpp"
#include "./typeof.hpp"
#include "./unfuzipped.hpp"
#include "./uniqued.hpp"
#include "./unzipped.hpp"
#include "./upper_chars.hpp"
// #include "./utf8_decoded.hpp"
// #include "./utf8_encoded.hpp"
// #include "./utf8_encoder.hpp"
#include "./wide_chars.hpp"
#include "./window.hpp"
#include "./with_position.hpp"
#include "./write.hpp"
#include "./xpressive_matches.hpp"
#include "./xpressive_tokenized.hpp"
#include "./zipped.hpp"
#include "./zipped_with.hpp"


#endif
